{
	"": {
		"prefix": "MasterLibrary",
		"body": [
		  "#include<bits/stdc++.h>",
		  "#include<cstdio>",
		  "#include<iomanip>",
		  "#include<algorithm>",
		  "#include<cctype>",
		  "//#include<boost/math/common_factor>",
		  "using namespace std;",
		  "",
		  "#define ll long long",
		  "#define ffl(i, s, n) for(ll i = s; i < n; i++)",
		  "#define bfl(i, s, n) for(ll i = s; i > n; i--)",
		  "#define ffln(i, s, n) for(ll i = s; i <= n; i++)",
		  "#define bfln(i, s, n) for(ll i = s; i >= n; i--)",
		  "#define foreach(i,x) for (auto&(i) : (x))",
		  "#define INF 1000000005",
		  "#define INFL 1000000000000000005ll",
		  "#define vi vector <int>",
		  "#define vi2 vector<vector<int>>",
		  "#define vp vector<pair<int,int>>",
		  "#define vll vector <long long>",
		  "#define vcvector <char>",
		  "#define vc2 vector<vector<char>>",
		  "#define vin(v) for(auto && i: v){cin>>i;}",
		  "#define vout(v) for(auto x:v) {cout<<x<<\" \";}",
		  "#define bg(v) v.begin()",
		  "#define ed(v) v.end()",
		  "#define pb push_back",
		  "#define pf push_front",
		  "#define mp make_pair",
		  "#define pp pair<int,int>",
		  "#define si set<int>",
		  "#define sc set<char>",
		  "#define sc2 set<set<char>>",
		  "#define mp make_pair",
		  "#define lb lower_bound",
		  "#define ub upper_bound",
		  "#define speedrun ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);",
		  "#define TC(t) while (t--)",
		  "#define cf count_if",
		  "#define MOD 1000000007",
		  "#define eps 1e-14",
		  "#define endl \"\\n\"",
		  "#define end \" \"",
		  "#define alla(a, n) a, a + n",
		  "#define sorta(a, n) sort(alla(a, n))",
		  "#define reversea(a, n) reverse(alla(a, n))",
		  "#define all(x) x.begin(), x.end()",
		  "#define revall(x) x.rbegin(), x.rend()",
		  "#define sortall(x) sort(all(x))",
		  "#define reverseall(x) reverse(all(x))",
		  "#define to_upper(x) transform(x.begin(), x.end(), x.begin(), ::toupper)",
		  "#define to_lower(x) transform(x.begin(), x.end(), x.begin(), ::tolower)",
		  "#define sz(v) (int)(v).size()",
		  "#define PI 3.1415926535897932384626",
		  "#define gcd __gcd",
		  "#define middle(x) ceil(x/2.0)-1",
		  "#define clear(x) memset(x, 0, sizeof(x))",
		  "#define clear2(x, y) memset(x, y, sizeof(x))",
		  "#define deb(x) cout << #x << \"=\" << x << endl",
		  "#define deb2(x, y) cout << #x << \"= \" << x << \", \" << #y << \"= \" << y << endl",
		  "",
		  "void sprint(int x) {cout << x;}",
		  "void sprint(long x) {cout << x;}",
		  "void sprint(long long x) {cout << x;}",
		  "void sprint(unsigned x) {cout << x;}",
		  "void sprint(unsigned long x) {cout << x;}",
		  "void sprint(unsigned long long x) {cout << x;}",
		  "void sprint(float x) {cout << x;}",
		  "void sprint(double x) {cout << x;}",
		  "void sprint(long double x) {cout << x;}",
		  "void sprint(char x) {cout << '\\'' << x << '\\'';}",
		  "void sprint(const char *x) {cout << '\\\"' << x << '\\\"';}",
		  "void sprint(const string &x) {cout << '\\\"' << x << '\\\"';}",
		  "void sprint(bool x) {cout << (x ? \"true\" : \"false\");}",
		  "template <typename T, typename V>",
		  "void sprint(const pair<T, V> &x);",
		  "template <typename T>",
		  "void sprint(const vector<T> &x);",
		  " ",
		  "template<typename T, typename V>",
		  "void sprint(const pair<T, V> &x) {cout << '{'; sprint(x.first); cout << ','; sprint(x.second); cout << \"}\";}",
		  "template<typename T>",
		  "void sprint(const vector<T> &x) {cout << \"{\";for(int u69=0;u69<x.size();u69++){sprint(x[u69]);cout << (u69+1==x.size()?\"\":\",\");};cout << \"}\";}",
		  "template<typename T>",
		  "void sprint(const T &x) {int f = 0; cout << '{'; for (auto &i: x) cout << (f++ ? \",\" : \"\"), sprint(i); cout << \"}\";}",
		  "void sprint() {cout << \"]\\n\";}",
		  "template <typename T, typename... V>",
		  "void sprint(T t, V... v) {sprint(t); if (sizeof...(v)) cout << \", \"; sprint(v...);}",
		  "",
		  "inline ll ceil2(ll a, ll b) {return (a + b - 1) / b;}",
		  "inline bool isPowerOfTwo(ll x) { return x && (!(x&(x-1))); } ",
		  "bool isPerfectSquare(ll x){ll sr = sqrt(x); return ((sr*sr) == x);} ",
		  "bool isIn(string &s2, string &s1){if (s1.find(s2) != string::npos) return true;return false;}",
		  "bool isSorted(vi &a){for(int i=0;i<(int)a.size()-1;i++) if(a[i] > a[i+1]) return false;return true;}",
		  "",
		  ""
		],
		"description": ""
	  }
}